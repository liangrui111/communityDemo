# ServerProperties
server.port=8080
server.servlet.context-path=/community


#关闭模板引擎的缓存 防止修改后页面刷新不出来 实际上线是要开着的可以降低服务器压力
spring.thymeleaf.cache=false 

# DataSourceProperties
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/community?characterEncoding=utf-8&useSSL=false&serverTimezone=Hongkong
spring.datasource.username=root
spring.datasource.password=123
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.maximum-pool-size=15
#保留的连接数
spring.datasource.hikari.minimum-idle=5
#空闲多久才关闭连接
spring.datasource.hikari.idle-timeout=30000

# MybatisProperties
#映射文件存放位置 通常放在resource下  编译后会被放到target/classes下面所以叫classpath
mybatis.mapper-locations=classpath:mapper/*.xml
#表对应实体类的包名  这里配置后引用实体类时就不用写包名了
mybatis.type-aliases-package=com.liangrui.community.entity
#启用自动生成主键
mybatis.configuration.useGeneratedKeys=true
#让header_url headerUrl类似这种命名方式能够自动匹配
mybatis.configuration.mapUnderscoreToCamelCase=true



# MailProperties
spring.mail.host=smtp.sina.com
spring.mail.port=465
spring.mail.username=liangruixinlang@sina.com
spring.mail.password=b87135e5760c5853
#安全的协议
#spring.mail.protocol=smtps
spring.mail.properties.mail.smtp.ssl.enable=true


# community
#因为邮箱激活时要发链接 并且我们开发环境和上线时是不一样的 所以配置一下
community.path.domain=http://localhost:8080
#配置文件上传的保存位置
community.path.upload=d:/work/data/upload

# RedisProperties
spring.redis.database=11
spring.redis.host=localhost
spring.redis.port=6379


# KafkaProperties
spring.kafka.bootstrap-servers=localhost:9092
#消费者分组 config文件里有
spring.kafka.consumer.group-id=test-consumer-group
#是否自动提交消费者的偏移量
spring.kafka.consumer.enable-auto-commit=true
#自动提交的频率
spring.kafka.consumer.auto-commit-interval=3000


# ElasticsearchProperties
#已过时
#spring.data.elasticsearch.cluster-name=nowcoder
#spring.data.elasticsearch.cluster-nodes=127.0.0.1:9300

#ElasticsearchProperties
spring.data.elasticsearch.repositories.enabled=true
spring.elasticsearch.rest.uris=localhost:9200
spring.data.elasticsearch.client.reactive.endpoints=localhost:9200



# TaskExecutionProperties
spring.task.execution.pool.core-size=5
spring.task.execution.pool.max-size=15
#队列容量
spring.task.execution.pool.queue-capacity=100

# TaskSchedulingProperties
spring.task.scheduling.pool.size=5



# QuartzProperties
spring.quartz.job-store-type=jdbc
spring.quartz.scheduler-name=communityScheduler
spring.quartz.properties.org.quartz.scheduler.instanceId=AUTO
#spring.quartz.properties.org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreTX
org.quartz.jobStore.class=org.springframework.scheduling.quartz.LocalDataSourceJobStore
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
spring.quartz.properties.org.quartz.jobStore.isClustered=true
spring.quartz.properties.org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool
spring.quartz.properties.org.quartz.threadPool.threadCount=5



# qiniu 自定义配置不是七牛云要求我们配的
#因为是自己的配置所以名字随便写
#标识用户身份的
qiniu.key.access=K1lDwgQqm3BSSs8llFjpIDq6yYLrX7yAL_id2ob7
#给上传内容加密的
qiniu.key.secret=ZWezbWVNjSy6eIEaHp7zCzOSIvHaD-oOP6yFQLA7
qiniu.bucket.header.name=liangrui-community-header1
#空间的域名
quniu.bucket.header.url=http://rcfwepncr.hd-bkt.clouddn.com
qiniu.bucket.share.name=liangrui-community-share
qiniu.bucket.share.url=http://rcfjtw6dp.hb-bkt.clouddn.com



# caffeine
caffeine.posts.max-size=15
caffeine.posts.expire-seconds=180



# actuator
management.endpoints.web.exposure.include=*
management.endpoints.web.exposure.exclude=info,caches